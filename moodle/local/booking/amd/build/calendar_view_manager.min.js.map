{"version":3,"file":"calendar_view_manager.min.js","sources":["../src/calendar_view_manager.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * A javascript module to handler booking view changes.\n * Improvised from core_calendar.\n *\n * @module     local_booking/calendar_view_manager\n * @author     Mustafa Hajjar (mustafahajjar@gmail.com)\n * @copyright  BAVirtual.co.uk Â© 2021\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport $ from 'jquery';\nimport Templates from 'core/templates';\nimport Notification from 'core/notification';\nimport CustomEvents from 'core/custom_interaction_events';\nimport SlotActions from 'local_booking/slot_actions';\nimport * as Repository from 'local_booking/repository';\nimport * as Selectors from 'local_booking/selectors';\n\n/**\n * Register event listeners for the module.\n *\n * @method  registerEventListeners\n * @param   {object} root The root element.\n */\n const registerEventListeners = (root) => {\n    root = $(root);\n\n    // Process previous/next week navigation links\n    root.on('click', Selectors.links.navLink, (e) => {\n        const wrapper = root.find(Selectors.calendarwrapper);\n        const courseId = wrapper.data('courseid');\n        const categoryId = wrapper.data('categoryid');\n        const link = e.currentTarget;\n\n        changeWeek(root, link.href, link.dataset.year, link.dataset.week, link.dataset.time, courseId, categoryId);\n        e.preventDefault();\n    });\n\n    const viewSelector = root.find(Selectors.viewSelector);\n    CustomEvents.define(viewSelector, [CustomEvents.events.activate]);\n    viewSelector.on(\n        CustomEvents.events.activate,\n        (e) => {\n            e.preventDefault();\n\n            const option = e.target;\n            if (option.classList.contains('active')) {\n                return;\n            }\n\n            const year = option.dataset.year,\n                week = option.dataset.week,\n                time = option.dataset.time,\n                courseId = option.dataset.courseid,\n                categoryId = option.dataset.categoryid;\n\n            refreshWeekContent(root, year, week, time, courseId, categoryId, e.target, 'local_booking/availability_calendar')\n                .then(() => {\n                    return window.history.pushState({}, '', '?view=user');\n                }).fail(Notification.exception);\n        }\n    );\n\n    // Tnitialize button state\n    const action = root.find(Selectors.calendarwrapper).data('action');\n    SlotActions.setPasteState(root);\n    SlotActions.setSaveButtonState(root, action);\n};\n\n/**\n * Refresh the week content.\n *\n * @method  refreshWeekContent\n * @param   {object} root The root element.\n * @param   {number} year Year\n * @param   {number} week week\n * @param   {number} time The timestamp of the begining current week\n * @param   {number} courseId The id of the course associated with the calendar shown\n * @param   {number} categoryId The id of the category associated with the calendar shown\n * @param   {object} target The element being replaced. If not specified, the calendarwrapper is used.\n * @param   {string} template The template to be rendered.\n * @return  {promise}\n */\n export const refreshWeekContent = (root, year, week, time, courseId, categoryId, target = null, template = '') => {\n    startLoading(root);\n\n    target = target || root.find(Selectors.calendarwrapper);\n    template = template || root.attr('data-template');\n    M.util.js_pending([root.get('id'), year, week, courseId].join('-'));\n\n    const action = target.data('action');\n    const view = target.data('viewall') ? 'all' : 'user';\n    const studentId = target.data('student-id');\n    const exerciseId = target.data('exercise-id');\n    time = time == 0 ? Date.now() / 1000 : time;\n\n    return Repository.getCalendarWeekData(year, week, time, courseId, categoryId, action, view, studentId, exerciseId)\n        .then(context => {\n            context.viewingmonth = true;\n            return Templates.render(template, context);\n        })\n        .then((html, js) => {\n            return Templates.replaceNode(target, html, js);\n        })\n        .always(() => {\n            M.util.js_complete([root.get('id'), year, week, courseId].join('-'));\n            SlotActions.setPasteState(root);\n            SlotActions.setSaveButtonState(root, action);\n            return stopLoading(root);\n        })\n        .fail(Notification.exception);\n};\n\n/**\n * Handle changes to the current calendar view.\n *\n * @method  changeWeek\n * @param   {object} root The container element\n * @param   {string} url The calendar url to be shown\n * @param   {number} year Year\n * @param   {number} week week\n * @param   {number} time The timestamp of the begining current week\n * @param   {number} courseId The id of the course associated with the calendar shown\n * @param   {number} categoryId The id of the category associated with the calendar shown\n * @return  {promise}\n */\nexport const changeWeek = (root, url, year, week, time, courseId, categoryId) => {\n    return refreshWeekContent(root, year, week, time, courseId, categoryId, null, '')\n        .then((...args) => {\n            if (url.length && url !== '#') {\n                window.history.pushState({}, '', url);\n            }\n            return args;\n        });\n};\n\n/**\n * Reload the current month view data.\n *\n * @method  reloadCurrentMonth\n * @param   {object} root The container element.\n * @param   {number} courseId The id of the course associated with the calendar shown\n * @param   {number} categoryId The id of the category associated with the calendar shown\n * @return  {promise}\n */\nexport const reloadCurrentMonth = (root, courseId = 0, categoryId = 0) => {\n    const year = root.find(Selectors.calendarwrapper).data('year');\n    const week = root.find(Selectors.calendarwrapper).data('week');\n    const time = root.find(Selectors.calendarwrapper).data('time');\n\n    courseId = courseId || root.find(Selectors.calendarwrapper).data('courseid');\n    categoryId = categoryId || root.find(Selectors.calendarwrapper).data('categoryid');\n\n    return refreshWeekContent(root, year, week, time, courseId, categoryId, null, '');\n};\n\n/**\n * Set the element state to loading.\n *\n * @method  startLoading\n * @param   {object} root The container element\n */\n export const startLoading = (root) => {\n    const loadingIconContainer = root.find(Selectors.containers.loadingIcon);\n    loadingIconContainer.removeClass('hidden');\n\n    $(root).one('submit', function() {\n        $(this).find('input[type=\"submit\"]').attr('disabled', 'disabled');\n    });\n};\n\n/**\n * Remove the loading state from the element.\n *\n * @method  stopLoading\n * @param   {object} root The container element\n */\nexport const stopLoading = (root) => {\n    const loadingIconContainer = root.find(Selectors.containers.loadingIcon);\n    loadingIconContainer.addClass('hidden');\n\n    $(root).one('submit', function() {\n        $(this).find('input[type=\"submit\"]').attr('enabled', 'enabled');\n    });\n};\n\nexport const init = (root, view) => {\n    registerEventListeners(root, view);\n};"],"names":["refreshWeekContent","root","year","week","time","courseId","categoryId","target","template","startLoading","find","Selectors","calendarwrapper","attr","M","util","js_pending","get","join","action","data","view","studentId","exerciseId","Date","now","Repository","getCalendarWeekData","then","context","viewingmonth","Templates","render","html","js","replaceNode","always","js_complete","setPasteState","setSaveButtonState","stopLoading","fail","Notification","exception","changeWeek","url","length","window","history","pushState","args","containers","loadingIcon","removeClass","one","this","addClass","on","links","navLink","e","wrapper","link","currentTarget","href","dataset","preventDefault","viewSelector","define","CustomEvents","events","activate","option","classList","contains","courseid","categoryid","registerEventListeners"],"mappings":"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"}