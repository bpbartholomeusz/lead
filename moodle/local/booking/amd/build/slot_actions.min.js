/**
 * Contain the logic for the quick add or update event modal.
 *
 * @module     local_booking/slot_actions
 * @author     Mustafa Hajjar (mustafahajjar@gmail.com)
 * @copyright  BAVirtual.co.uk Â© 2021
 * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
 */
define("local_booking/slot_actions",["jquery","core/notification","local_booking/repository","local_booking/calendar_view_manager"],(function($,Notification,Repository,CalendarViewManager){var BookedSlot,SELECTORS_CALENDAR_WRAPPER="[class=calendarwrapper]",SELECTORS_SLOTS_TABLE='[data-region="slots-week"]',SELECTORS_SLOT_DAY='[data-region="day"]',SELECTORS_SAVE_BUTTON='[data-region="save-button"]',SELECTORS_PASTE_BUTTON="[data-region='paste-button']",SELECTORS_BOOK_BUTTON="[data-region='book-button']",SELECTORS_DAY_TIME_SLOT="[data-action='day-time-slot']",Slots=[],SlotIndexes=[],postActive=!1;function getUISlots(root,action){const slottype="book"==action?"slot-booked":"slot-marked",year=root.find(SELECTORS_CALENDAR_WRAPPER).data("year"),week=root.find(SELECTORS_CALENDAR_WRAPPER).data("week"),tableid=root.find(SELECTORS_SLOTS_TABLE).attr("id"),head=$("#"+tableid+" th"),colCount=document.getElementById(tableid).rows[0].cells.length;let colOffset;Slots.length=0,head.each((function(){if("slot-week-day"==$(this).data("region"))return colOffset=head.index(this)+1,!1}));for(let i=colOffset;i<=colCount;i++){const dayHour=$("#"+tableid+" td:nth-child("+i+")").map((function(){return[[$(this).data(slottype),$(this).data("slot-timestamp")]]})).get();let aSlot={};dayHour.forEach(((hourSlot,index)=>{let isLastElement=index==dayHour.length-1;hourSlot[0]?0===Object.keys(aSlot).length&&aSlot.constructor===Object?aSlot.starttime=hourSlot[1]:aSlot.endtime=hourSlot[1]:0===Object.keys(aSlot).length&&aSlot.constructor===Object||(aSlot=addSlot(aSlot,slottype,week,year)),!isLastElement||0===Object.keys(aSlot).length&&aSlot.constructor===Object||(aSlot=addSlot(aSlot,slottype,week,year))}))}}function addSlot(aSlot,slottype){let week=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,year=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;return"slot-marked"==slottype?Slots.push(aSlot):"slot-booked"==slottype&&(aSlot.week=week,aSlot.year=year,BookedSlot=aSlot),{}}function setPasteState(root){SlotIndexes.length>0?root.find(SELECTORS_PASTE_BUTTON).addClass("slot-button-blue").removeClass("slot-button-gray"):root.find(SELECTORS_PASTE_BUTTON).addClass("slot-button-gray").removeClass("slot-button-blue")}function setSaveButtonState(root,action,forceenable){getUISlots(root,action);const SaveButton=root.find("book"==action?SELECTORS_BOOK_BUTTON:SELECTORS_SAVE_BUTTON);let state=forceenable||"book"==action&&void 0!==BookedSlot&&0!==BookedSlot.length||"post"==action&&void 0!==Slots&&0!==Slots.length;SaveButton.addClass(state?"slot-button-blue":"slot-button-gray").removeClass(state?"slot-button-gray":"slot-button-blue"),SaveButton.prop("disabled",!state)}function setSlot(cell,action){const slotaction="book"==action?"slot-booked":"slot-marked",slotactionclass="book"==action?"slot-booked":"slot-selected";$(cell).data(slotaction)?$(cell).removeClass(slotactionclass):$(cell).addClass(slotactionclass),$(cell).data(slotaction,!$(cell).data(slotaction))}return{saveWeekSlots:function(root){CalendarViewManager.startLoading(root);const course=root.find(SELECTORS_CALENDAR_WRAPPER).data("courseid"),year=root.find(SELECTORS_CALENDAR_WRAPPER).data("year"),week=root.find(SELECTORS_CALENDAR_WRAPPER).data("week");getUISlots(root);let serverCall=null;return serverCall=0!=Slots.length?Repository.saveSlots(Slots,course,year,week):Repository.clearSlots(course,year,week),serverCall.then((function(response){response.validationerror&&alert("Errors encountered: Unable to process availability posting action!")})).always((function(){return Notification.fetchNotifications(),CalendarViewManager.stopLoading(root)})).fail(Notification.exception)},saveBookedSlot:function(root){CalendarViewManager.startLoading(root);const course=root.find(SELECTORS_CALENDAR_WRAPPER).data("courseid"),exercise=root.find(SELECTORS_CALENDAR_WRAPPER).data("exercise-id"),studentid=root.find(SELECTORS_CALENDAR_WRAPPER).data("student-id");return getUISlots(root,"book"),Repository.isConflictingBookings(studentid,BookedSlot).then((function(response){return response.validationerror?(alert("Errors encountered: Unable to check conflicting bookings!"),!1):response.result?(alert(response.warnings[0].message),!response.result):Repository.saveBookedSlot(BookedSlot,course,exercise,studentid).then((function(response){response.validationerror?alert("Errors encountered: Unable to save slot!"):location.href=M.cfg.wwwroot+"/local/booking/view.php?courseid="+course})).always((function(){CalendarViewManager.stopLoading(root)})).fail(Notification.exception)})).always((function(){CalendarViewManager.stopLoading(root)})).fail(Notification.exception)},clearWeekSlots:function(root){$("td").filter((function(){return 0==$(this).data("slot-booked")&&($(this).data("slot-marked",0),$(this).removeClass("slot-selected")),!0})),setSaveButtonState(root,"post",!0)},pasteSlots:function(root){const table=document.getElementById(root.find(SELECTORS_SLOTS_TABLE).attr("id"));SlotIndexes.forEach((idx=>{let slot=table.rows[idx[0]].cells[idx[1]];$(slot).data("slot-marked",1),$(slot).addClass("slot-selected",1)})),setSaveButtonState(root,"post")},setPasteState:setPasteState,setSaveButtonState:setSaveButtonState,copySlots:function(root){SlotIndexes.length=0,$(SELECTORS_SLOT_DAY).each(((idx,el)=>{$(el).data("slot-marked")&&SlotIndexes.push([el.closest("tr").rowIndex,el.cellIndex])})),setPasteState(root)},postSlots:function(root,action,target){let overridePost=arguments.length>3&&void 0!==arguments[3]&&arguments[3];void 0!==target&&(postActive||overridePost)&&(target.is(SELECTORS_DAY_TIME_SLOT)||"all"===action||""===action||(setSlot(target,action),setSaveButtonState(root,action)))},setPosting:function(state){postActive=state},Slots:Slots,SlotIndexes:SlotIndexes}}));

//# sourceMappingURL=slot_actions.min.js.map