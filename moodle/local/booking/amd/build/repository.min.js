define("local_booking/repository",["exports","core/ajax"],(function(_exports,_ajax){var obj;
/**
   * A javascript module to handle calendar ajax actions.
   *
   * @module     local_booking/repository
   * @author     Mustafa Hajjar (mustafahajjar@gmail.com)
   * @copyright  BAVirtual.co.uk Â© 2021
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.updateUserPreferences=_exports.updateSuspendedStatus=_exports.updateProfileComment=_exports.updateGroup=_exports.submitCreateUpdateLogentryForm=_exports.saveSlots=_exports.saveBookedSlot=_exports.isConflictingBookings=_exports.getLogentryById=_exports.getExerciseName=_exports.getCalendarWeekData=_exports.getBookingsData=_exports.findPirep=_exports.deleteLogentry=_exports.clearSlots=_exports.cancelBooking=void 0,_ajax=(obj=_ajax)&&obj.__esModule?obj:{default:obj};_exports.getCalendarWeekData=(year,week,time,courseId,categoryId,action,view,studentId,exerciseId)=>{const request={methodname:"local_booking_get_weekly_view",args:{year:year,week:week,time:time,courseid:courseId,categoryid:categoryId,action:action,view:view,studentid:studentId,exerciseid:exerciseId}};return _ajax.default.call([request])[0]};_exports.getBookingsData=(courseId,filter)=>{const request={methodname:"local_booking_get_bookings_view",args:{courseid:courseId,filter:filter}};return _ajax.default.call([request])[0]};_exports.getExerciseName=(courseId,exerciseId)=>{const request={methodname:"local_booking_get_exercise_name",args:{courseid:courseId,exerciseid:exerciseId,returnempty:!0}};return _ajax.default.call([request])[0]};_exports.saveBookedSlot=(bookedslot,courseId,exerciseId,studentId)=>{const request={methodname:"local_booking_save_booking",args:{bookedslot:bookedslot,courseid:courseId,exerciseid:exerciseId,studentid:studentId}};return _ajax.default.call([request])[0]};_exports.cancelBooking=(bookingId,comment,noshow)=>{const request={methodname:"local_booking_cancel_booking",args:{bookingid:bookingId,comment:comment,noshow:noshow}};return _ajax.default.call([request])[0]};_exports.isConflictingBookings=(studentid,bookedslot)=>{const request={methodname:"local_booking_is_conflicting_booking",args:{studentid:studentid,bookedslot:bookedslot}};return _ajax.default.call([request])[0]};_exports.saveSlots=(weekSlots,course,year,week)=>{const request={methodname:"local_booking_save_slots",args:{slots:weekSlots,courseid:course,year:year,week:week}};return _ajax.default.call([request])[0]};_exports.clearSlots=(course,year,week)=>{const request={methodname:"local_booking_delete_slots",args:{courseid:course,year:year,week:week}};return _ajax.default.call([request])[0]};_exports.submitCreateUpdateLogentryForm=(formArgs,formData)=>{const request={methodname:"local_booking_submit_logentry_form",args:{formargs:formArgs,formdata:formData}};return _ajax.default.call([request])[0]};_exports.getLogentryById=(logentryId,courseId,userId)=>{const request={methodname:"local_booking_get_logentry_by_id",args:{logentryid:logentryId,courseid:courseId,userid:userId}};return _ajax.default.call([request])[0]};_exports.deleteLogentry=(logentryId,userId,courseId,cascade)=>{const request={methodname:"local_booking_delete_logentry",args:{logentryid:logentryId,userid:userId,courseid:courseId,cascade:cascade}};return _ajax.default.call([request])[0]};_exports.findPirep=(pirep,courseId,userId,exerciseId)=>{const request={methodname:"local_booking_get_pirep",args:{pirep:pirep,courseid:courseId,userid:userId,exerciseid:exerciseId}};return _ajax.default.call([request])[0]};_exports.updateSuspendedStatus=(status,courseId,userId)=>{const request={methodname:"local_booking_update_suspended_status",args:{status:status,courseid:courseId,userid:userId}};return _ajax.default.call([request])[0]};_exports.updateGroup=(group,ismember,courseId,userId)=>{const request={methodname:"local_booking_update_group_status",args:{group:group,ismember:ismember,courseid:courseId,userid:userId}};return _ajax.default.call([request])[0]};_exports.updateUserPreferences=(preference,value,courseId,userId)=>{const request={methodname:"local_booking_update_user_preferences",args:{preference:preference,value:value,courseid:courseId,userid:userId}};return _ajax.default.call([request])[0]};_exports.updateProfileComment=(courseId,userId,comment)=>{const request={methodname:"local_booking_update_profile_comment",args:{courseid:courseId,userid:userId,comment:comment}};return _ajax.default.call([request])[0]}}));

//# sourceMappingURL=repository.min.js.map