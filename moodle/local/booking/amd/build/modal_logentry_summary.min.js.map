{"version":3,"file":"modal_logentry_summary.min.js","sources":["../src/modal_logentry_summary.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * A javascript module to handle summary modal.\n * Improvised from core_calendar.\n *\n * @module     local_booking/modal_logentry_summary\n * @author     Mustafa Hajjar (mustafahajjar@gmail.com)\n * @copyright  BAVirtual.co.uk Â© 2021\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport $ from 'jquery';\nimport * as CustomEvents from 'core/custom_interaction_events';\nimport Modal from 'core/modal';\nimport * as ModalEvents from 'core/modal_events';\nimport * as ModalActions from 'local_booking/modal_actions';\nimport * as BookingEvents from 'local_booking/events';\n\nconst SELECTORS = {\n    ROOT: \"[data-region='summary-modal-container']\",\n    ADD_BUTTON: '[data-action=\"add\"]',\n    EDIT_BUTTON: '[data-action=\"edit\"]',\n    DELETE_BUTTON: '[data-action=\"delete\"]',\n    FEEDBACK_BUTTON: '[data-action=\"feedback\"]',\n};\n\n/**\n * Constructor for the Modal.\n *\n * @param {object} root The root jQuery element for the modal\n */\nexport default class ModalEventSummary extends Modal {\n    static TEMPLATE = 'local_booking/logentry_summary_modal';\n    static TYPE = 'local_booking-logentry_summary';\n\n    /**\n     * Get the feedback button element from the footer. The button is cached\n     * as it's not expected to change.\n     *\n     * @method getFeedbackButton\n     * @return {object} button element\n     */\n     getFeedbackButton() {\n        if (typeof this.feedbackButton == 'undefined') {\n            this.feedbackButton = this.getFooter().find(SELECTORS.FEEDBACK_BUTTON);\n        }\n\n        return this.feedbackButton;\n    }\n\n    /**\n     * Get the add logentry button element from the footer. The button is cached\n     * as it's not expected to change.\n     *\n     * @method getAddButton\n     * @return {object} button element\n     */\n    getAddButton() {\n        if (typeof this.addButton == 'undefined') {\n            this.addButton = this.getFooter().find(SELECTORS.ADD_BUTTON);\n        }\n\n        return this.addButton;\n    }\n\n    /**\n     * Get the edit button element from the footer. The button is cached\n     * as it's not expected to change.\n     *\n     * @method getEditButton\n     * @return {object} button element\n     */\n    getEditButton() {\n        if (typeof this.editButton == 'undefined') {\n            this.editButton = this.getFooter().find(SELECTORS.EDIT_BUTTON);\n        }\n\n        return this.editButton;\n    }\n\n    /**\n     * Get the delete button element from the footer. The button is cached\n     * as it's not expected to change.\n     *\n     * @method getDeleteButton\n     * @return {object} button element\n     */\n    getDeleteButton() {\n        if (typeof this.deleteButton == 'undefined') {\n            this.deleteButton = this.getFooter().find(SELECTORS.DELETE_BUTTON);\n        }\n\n        return this.deleteButton;\n    }\n\n    /**\n     * Get the id for the logbook entry being shown in this modal. This value is\n     * not cached because it will change depending on which logbook entry is\n     * being displayed.\n     *\n     * @method getLogentryId\n     * @return {int}\n     */\n    getLogentryId() {\n        return this.getBody().find(SELECTORS.ROOT).attr('data-logentry-id');\n    }\n\n    /**\n     * Get the id for the logbook entry being shown in this modal. This value is\n     * not cached because it will change depending on which logbook entry is\n     * being displayed.\n     *\n     * @method getUserId\n     * @return {int}\n     */\n     getUserId() {\n        return this.getBody().find(SELECTORS.ROOT).attr('data-user-id');\n    }\n\n    /**\n     * Get the exercise id for the logbook entry being shown in this modal.\n     *\n     * @method getExerciseId\n     * @return {int}\n     */\n     getExerciseId() {\n        return this.getBody().find(SELECTORS.ROOT).attr('data-exercise-id');\n    }\n\n    /**\n     * Get the session id for the logbook entry being shown in this modal.\n     *\n     * @method getSessionId\n     * @return {int}\n     */\n     getSessionId() {\n        return this.getBody().find(SELECTORS.ROOT).attr('data-session-id');\n    }\n\n    /**\n     * Get the flight dategru for the logbook entry being shown in this modal.\n     *\n     * @method getFlightDate\n     * @return {int}\n     */\n     getFlightDate() {\n        return this.getBody().find(SELECTORS.ROOT).attr('data-flight-date');\n    }\n\n    /**\n     * Get the title for the logentry being shown in this modal. This value is\n     * not cached because it will change depending on which logentry is\n     * being displayed.\n     *\n     * @method getLogentryTitle\n     * @return {String}\n     */\n     getLogentryTitle() {\n        return this.getBody().find(SELECTORS.ROOT).attr('data-logentry-title');\n    }\n\n    /**\n     * Set up all of the event handling for the modal.\n     *\n     * @method registerEventListeners\n     */\n    registerEventListeners() {\n        // Apply parent event listeners.\n        super.registerEventListeners(this);\n\n        // We have to wait for the modal to finish rendering in order to ensure that\n        // the data-logentry-id property is available to use in the modal.\n        M.util.js_pending('local_booking/modal_logentry_summary:registerEventListeners:bodyRendered');\n        this.getRoot().on(ModalEvents.bodyRendered, function() {\n            this.getModal().data({\n                logentryTitle: this.getLogentryTitle(),\n                logentryId: this.getLogentryId(),\n            })\n            .attr('data-type', 'logentry');\n            ModalActions.registerDelete(this.getModal());\n            ModalActions.registerRedirect(this.getModal());\n            M.util.js_complete('local_booking/modal_logentry_summary:registerEventListeners:bodyRendered');\n        }.bind(this));\n\n        $('body').on(BookingEvents.logentrydeleted, function() {\n            // Close the dialogue on delete.\n            this.hide();\n        }.bind(this));\n\n        $('body').on(BookingEvents.gotoFeedback, function() {\n            // Close the dialogue before going to the feedback page.\n            this.hide();\n        }.bind(this));\n\n        CustomEvents.define(this.getAddButton(), [\n            CustomEvents.events.activate\n        ]);\n\n        CustomEvents.define(this.getEditButton(), [\n            CustomEvents.events.activate\n        ]);\n\n        this.getAddButton().on(CustomEvents.events.activate, function(e, data) {\n            // When the edit button is clicked we fire an event for the booking UI to handle edit.\n            $('body').trigger(BookingEvents.addLogentry, [this.getUserId()]);\n\n            // There is nothing else for us to do so let's hide.\n            this.hide();\n\n            // We've handled this event so no need to propagate it.\n            e.preventDefault();\n            e.stopPropagation();\n            data.originalEvent.preventDefault();\n            data.originalEvent.stopPropagation();\n        }.bind(this));\n\n        this.getEditButton().on(CustomEvents.events.activate, function(e, data) {\n            // When the edit button is clicked we fire an event for the booking UI to handle edit.\n            $('body').trigger(BookingEvents.editLogentry, [this.getUserId(), this.getLogentryId()]);\n\n            // There is nothing else for us to do so let's hide.\n            this.hide();\n\n            // We've handled this event so no need to propagate it.\n            e.preventDefault();\n            e.stopPropagation();\n            data.originalEvent.preventDefault();\n            data.originalEvent.stopPropagation();\n        }.bind(this));\n    }\n}\n\nModalEventSummary.registerModalType();"],"names":["SELECTORS","ModalEventSummary","Modal","getFeedbackButton","this","feedbackButton","getFooter","find","getAddButton","addButton","getEditButton","editButton","getDeleteButton","deleteButton","getLogentryId","getBody","attr","getUserId","getExerciseId","getSessionId","getFlightDate","getLogentryTitle","registerEventListeners","M","util","js_pending","getRoot","on","ModalEvents","bodyRendered","getModal","data","logentryTitle","logentryId","ModalActions","registerDelete","registerRedirect","js_complete","bind","BookingEvents","logentrydeleted","hide","gotoFeedback","CustomEvents","define","events","activate","e","trigger","addLogentry","preventDefault","stopPropagation","originalEvent","editLogentry","registerModalType"],"mappings":";;;;;;;;;qXAgCMA,eACI,0CADJA,qBAEU,sBAFVA,sBAGW,uBAHXA,wBAIa,yBAJbA,0BAKe,iCAQAC,0BAA0BC,+BACzB,mDACJ,iCASbC,gCACqC,IAAvBC,KAAKC,sBACPA,eAAiBD,KAAKE,YAAYC,KAAKP,4BAGzCI,KAAKC,eAUhBG,2BACiC,IAAlBJ,KAAKK,iBACPA,UAAYL,KAAKE,YAAYC,KAAKP,uBAGpCI,KAAKK,UAUhBC,4BACkC,IAAnBN,KAAKO,kBACPA,WAAaP,KAAKE,YAAYC,KAAKP,wBAGrCI,KAAKO,WAUhBC,8BACoC,IAArBR,KAAKS,oBACPA,aAAeT,KAAKE,YAAYC,KAAKP,0BAGvCI,KAAKS,aAWhBC,uBACWV,KAAKW,UAAUR,KAAKP,gBAAgBgB,KAAK,oBAWnDC,mBACUb,KAAKW,UAAUR,KAAKP,gBAAgBgB,KAAK,gBASnDE,uBACUd,KAAKW,UAAUR,KAAKP,gBAAgBgB,KAAK,oBASnDG,sBACUf,KAAKW,UAAUR,KAAKP,gBAAgBgB,KAAK,mBASnDI,uBACUhB,KAAKW,UAAUR,KAAKP,gBAAgBgB,KAAK,oBAWnDK,0BACUjB,KAAKW,UAAUR,KAAKP,gBAAgBgB,KAAK,uBAQpDM,+BAEUA,uBAAuBlB,MAI7BmB,EAAEC,KAAKC,WAAW,iFACbC,UAAUC,GAAGC,YAAYC,aAAc,gBACnCC,WAAWC,KAAK,CACjBC,cAAe5B,KAAKiB,mBACpBY,WAAY7B,KAAKU,kBAEpBE,KAAK,YAAa,YACnBkB,aAAaC,eAAe/B,KAAK0B,YACjCI,aAAaE,iBAAiBhC,KAAK0B,YACnCP,EAAEC,KAAKa,YAAY,6EACrBC,KAAKlC,2BAEL,QAAQuB,GAAGY,cAAcC,gBAAiB,gBAEnCC,QACPH,KAAKlC,2BAEL,QAAQuB,GAAGY,cAAcG,aAAc,gBAEhCD,QACPH,KAAKlC,OAEPuC,aAAaC,OAAOxC,KAAKI,eAAgB,CACrCmC,aAAaE,OAAOC,WAGxBH,aAAaC,OAAOxC,KAAKM,gBAAiB,CACtCiC,aAAaE,OAAOC,gBAGnBtC,eAAemB,GAAGgB,aAAaE,OAAOC,SAAU,SAASC,EAAGhB,0BAE3D,QAAQiB,QAAQT,cAAcU,YAAa,CAAC7C,KAAKa,mBAG9CwB,OAGLM,EAAEG,iBACFH,EAAEI,kBACFpB,KAAKqB,cAAcF,iBACnBnB,KAAKqB,cAAcD,mBACrBb,KAAKlC,YAEFM,gBAAgBiB,GAAGgB,aAAaE,OAAOC,SAAU,SAASC,EAAGhB,0BAE5D,QAAQiB,QAAQT,cAAcc,aAAc,CAACjD,KAAKa,YAAab,KAAKU,uBAGjE2B,OAGLM,EAAEG,iBACFH,EAAEI,kBACFpB,KAAKqB,cAAcF,iBACnBnB,KAAKqB,cAAcD,mBACrBb,KAAKlC,kDAIfH,kBAAkBqD"}